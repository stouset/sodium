- :class    : Sodium::Auth
  :family   : crypto_auth
  :constants:
    - BYTES
    - KEYBYTES
  
  :functions: 
    ~      : [ buffer_out, buffer_in, ulong_long, buffer_in, int ]
    :verify: [ buffer_in , buffer_in, ulong_long, buffer_in, int ]

  :primitives:
    - :HMACSHA512256
    - :HMACSHA256

- :class    : Sodium::Box
  :family   : crypto_box
  :constants:
    - PUBLICKEYBYTES
    - SECRETKEYBYTES
    - BEFORENMBYTES
    - NONCEBYTES
    - ZEROBYTES
    - BOXZEROBYTES
    - MACBYTES
    
  :functions:
    ~            : [ buffer_out, buffer_in, ulong_long, buffer_in, buffer_in, buffer_in, int ]
    :open        : [ buffer_out, buffer_in, ulong_long, buffer_in, buffer_in, buffer_in, int ]
    :keypair     : [ buffer_out, buffer_out, int ]
    :beforenm    : [ buffer_out, buffer_in, buffer_in, int ]
    :afternm     : [ buffer_out, buffer_in, ulong_long, buffer_in, buffer_in, int ]
    :open_afternm: [ buffer_out, buffer_in, ulong_long, buffer_in, buffer_in, int ]

  :primitives:
    - :Curve25519XSalsa20Poly1305

- :class    : Sodium::Hash
  :family   : crypto_hash
  :constants:
    - BYTES

  :functions:
    ~: [ buffer_out, buffer_in, ulong_long, int ]

  :primitives:
    - :SHA512
    - :SHA256

- :class    : Sodium::OneTimeAuth
  :family   : crypto_onetimeauth
  :constants: 
    - BYTES
    - KEYBYTES

  :functions:
    ~      : [ buffer_out, buffer_in, ulong_long, buffer_in, int ]
    :verify: [ buffer_in , buffer_in, ulong_long, buffer_in, int ]

  :primitives:
    - :Poly1305

- :class    : Sodium::SecretBox
  :family   : crypto_secretbox
  :constants:
    - KEYBYTES
    - NONCEBYTES
    - ZEROBYTES
    - BOXZEROBYTES

  :functions:
    ~    : [ buffer_out, buffer_in, ulong_long, buffer_in, buffer_in, int ]
    :open: [ buffer_out, buffer_in, ulong_long, buffer_in, buffer_in, int ]

  :primitives:
    - :XSalsa20Poly1305

- :class    : Sodium::Sign
  :family   : crypto_sign
  :constants:
    - BYTES
    - PUBLICKEYBYTES
    - SECRETKEYBYTES

  :functions:
    ~      : [ buffer_out, buffer_out, buffer_in, ulong_long, buffer_in, int ]
    open   : [ buffer_out, buffer_out, buffer_in, ulong_long, buffer_in, int ]
    keypair: [ buffer_out, buffer_out, int ]

  :primitives:
    - :Ed25519